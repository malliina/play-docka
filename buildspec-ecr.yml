# Assumes build environment aws/codebuild/java:openjdk-8 which includes JDK, Docker and awscli.
# Assumes an ECR repo in environment variable REPOSITORY_URI.
# Can be used with a AWS Elastic Beanstalk platform as a Deploy target in AWS CodePipeline.
# Set environment variable STYLE to single or multi for single- or multi-container Docker environments respectively.
version: 0.2
env:
  variables:
    SBT_VERSION: "1.2.8"
phases:
  install:
    commands:
      - echo Installing SBT $SBT_VERSION...
      - apt-get update -y
      - curl -L -o sbt-$SBT_VERSION.deb https://dl.bintray.com/sbt/debian/sbt-$SBT_VERSION.deb
      - dpkg -i sbt-$SBT_VERSION.deb
      - sbt sbtVersion
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
  build:
    commands:
      - echo Build started on `date`
      - echo Building Docker image from commit hash $COMMIT_HASH...
      - sbt docker:stage
      - docker build -t $REPOSITORY_URI:latest target/docker/stage
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    # at-character is used as the delimiter
    commands:
      - echo Build completed on `date`
      - echo Pushing Docker image to $REPOSITORY_URI:$IMAGE_TAG...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - cp Dockerrun-$STYLE.aws.json Dockerrun.aws.json
      - sed -i='' "s@<REPOSITORY_URI>@$REPOSITORY_URI@" Dockerrun.aws.json
      - sed -i='' "s@<IMAGE_TAG>@$IMAGE_TAG@" Dockerrun.aws.json
      - echo Build complete
artifacts:
  files:
    - Dockerrun.aws.json
